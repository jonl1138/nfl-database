shiny::runApp('C:/Users/Jonathan/OneDrive/Documents/SummerProject/real-estate')
install.packages("dplyr")
install.packages("Quandl")
runApp('C:/Users/Jonathan/OneDrive/Documents/SummerProject/real-estate')
install.packages("ggplot2")
runApp('C:/Users/Jonathan/OneDrive/Documents/SummerProject/real-estate')
View(neighborhood_mapping_code)
return(neighborhood_mapping_code$AREA)
library("dplyr")
library("Quandl")
library("httr")
library("jsonlite")
library("ggplot2")
source('secret/api-key.R')
# reads in user-given API key to allow access to Quandl API data
Quandl.api_key(api_key)
mappingFinder <- function(area_name) {
if (area_name == "City")
return(city_mapping_code$AREA)
else if (area_name == "State") {
return(state_mapping_code$AREA)
}
else if (area_name == "County") {
return(county_mapping_code$AREA)
}
else if (area_name == "Greater Metropolitan Area"){
return(greatermetro_mapping_code$AREA)
}
else if (area_name == "Neighborhood") {
return(neighborhood_mapping_code$AREA)
}
}
state_mapping_code <- read.csv("filtered_state_mapping.csv")
county_mapping_code <- read.csv("filtered_county_mapping.csv")
city_mapping_code <- read.csv("filtered_city_mapping.csv")
greatermetro_mapping_code <- read.csv("filtered_greatermetro_mapping.csv")
neighborhood_mapping_code <- read.csv("filtered_neighborhood_mapping.csv")
data2 <- Quandl('ZILLOW/C25709_ZRISFRR', column_index='1')
data3 <- Quandl('ZILLOW/Z98006_ZHVIAH')
filtered_data3 <- filter(data3, substring(Date,1,4) == '2018')
data4 <- Quandl('ZILLOW/Z98006_HSAFRAL')
ggplot(data = data3) +
geom_point(mapping = aes(x= data3$Date, y= data3$Value))
setwd("C:/Users/Jonathan/OneDrive/Documents/SummerProject/real-estate")
library("dplyr")
library("Quandl")
library("httr")
library("jsonlite")
library("ggplot2")
source('secret/api-key.R')
# reads in user-given API key to allow access to Quandl API data
Quandl.api_key(api_key)
mappingFinder <- function(area_name) {
if (area_name == "City")
return(city_mapping_code$AREA)
else if (area_name == "State") {
return(state_mapping_code$AREA)
}
else if (area_name == "County") {
return(county_mapping_code$AREA)
}
else if (area_name == "Greater Metropolitan Area"){
return(greatermetro_mapping_code$AREA)
}
else if (area_name == "Neighborhood") {
return(neighborhood_mapping_code$AREA)
}
}
state_mapping_code <- read.csv("filtered_state_mapping.csv")
county_mapping_code <- read.csv("filtered_county_mapping.csv")
city_mapping_code <- read.csv("filtered_city_mapping.csv")
greatermetro_mapping_code <- read.csv("filtered_greatermetro_mapping.csv")
neighborhood_mapping_code <- read.csv("filtered_neighborhood_mapping.csv")
data2 <- Quandl('ZILLOW/C25709_ZRISFRR', column_index='1')
data3 <- Quandl('ZILLOW/Z98006_ZHVIAH')
filtered_data3 <- filter(data3, substring(Date,1,4) == '2018')
data4 <- Quandl('ZILLOW/Z98006_HSAFRAL')
ggplot(data = data3) +
geom_point(mapping = aes(x= data3$Date, y= data3$Value))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(state_mapping_code)
c("Choose" = '', state_mapping_code$AREA)
c(state_mapping_code$AREA)
state_mapping_code$AREA
is.vector(state_mapping_code)
is.vector(state_mapping_code$AREA)
is.list(state_mapping_code$AREA)
a1 = c(1,2,3)
a2 <- c(4,5,6)
a3 <- data.frame(a1,a2)
View(a3)
is.vector
is.vector(a3$a1)
is.vector(state_mapping_code$AREA)
View(state_mapping_code)
View(a3)
state_mapping_code[AREA]
a3[a1]
a3['a1']
state_mapping_code['AREA']
a4 <- state_mapping_code['AREA']
is.vector(a4)
class(a4)
a4 <- state_mapping_code[['AREA']]
class(a4)
a4 <- state_mapping_code[,'AREA']
is.vector(a4)
a4 <- state_mapping_code[['AREA']]
is.vector(a4)
a4 <- a3[['a1']]
is.vector
is.vector(a4)
a1 = c(1, 2, 3, 4, 5)
a2 = c(6, 7, 8, 9, 10)
a3 = c(11, 12, 13, 14, 15)
aframe = data.frame(a1, a2, a3)
View(aframe)
avector <- as.vector(aframe['a2'])
class(avector)
avector <- aframe[['a2']]
class(avector)
avector <- aframe[,2]
class(avector)
is.vector(avector)
is.data.frame(state_mapping_code)
is.data.frame(state_mapping_code$AREA)
class(state_mapping_code$AREA)
state_mapping_code$AREA
library("dplyr")
library("Quandl")
library("httr")
library("jsonlite")
library("ggplot2")
source('secret/api-key.R')
# reads in user-given API key to allow access to Quandl API data
Quandl.api_key(api_key)
mappingFinder <- function(area_name) {
if (area_name == "City")
return(city_mapping_code$AREA)
else if (area_name == "State") {
return(state_mapping_code$AREA)
}
else if (area_name == "County") {
return(county_mapping_code$AREA)
}
else if (area_name == "Greater Metropolitan Area"){
return(greatermetro_mapping_code$AREA)
}
else if (area_name == "Neighborhood") {
return(neighborhood_mapping_code$AREA)
}
}
state_mapping_code <- read.csv("filtered_state_mapping.csv")
county_mapping_code <- read.csv("filtered_county_mapping.csv")
city_mapping_code <- read.csv("filtered_city_mapping.csv")
greatermetro_mapping_code <- read.csv("filtered_greatermetro_mapping.csv")
neighborhood_mapping_code <- read.csv("filtered_neighborhood_mapping.csv")
data2 <- Quandl('ZILLOW/C25709_ZRISFRR', column_index='1')
data3 <- Quandl('ZILLOW/Z98006_ZHVIAH')
filtered_data3 <- filter(data3, substring(Date,1,4) == '2018')
data4 <- Quandl('ZILLOW/Z98006_HSAFRAL')
ggplot(data = data3) +
geom_point(mapping = aes(x= data3$Date, y= data3$Value))
c(state_mapping_code$AREA)
is.factor(state_mapping_code$AREA)
as.character(state_mapping_code$AREA)
x <- as.character(state_mapping_code$AREA)
runApp()
runApp()
runApp()
runApp()
